{"version":3,"file":"static/js/975.cfcbfd00.chunk.js","mappings":"2KAGO,MAAMA,EAAmBC,GAASA,EAAMC,QAAQC,W,iCCDhD,MAAMC,E,OAAiBC,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mX,aCApC,MAAMC,EAAcC,IAAkB,IAAjB,QAAEC,GAASD,EACrC,OACEE,EAAAA,EAAAA,KAACR,EAAc,CAACS,KAAK,SAASF,QAASA,EAAQG,SAAC,aAE/B,E,sBCOd,MAAMC,EAAcA,KACzB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAS,GAGnDK,GAAWC,EAAAA,EAAAA,MAEXrB,GAAasB,EAAAA,EAAAA,IAAYzB,GAmC/B,OArBA0B,EAAAA,EAAAA,YAAU,KACYC,KAAKC,MAAMC,aAAaC,QAAQ,cAEpCC,OAAS,GAIzBF,aAAaG,QAAQ,YAAaL,KAAKM,UAAU,IAAI,GACpD,KAEHP,EAAAA,EAAAA,YAAU,KACRH,GAASW,EAAAA,EAAAA,KAAe,GACvB,CAACX,KAEJG,EAAAA,EAAAA,YAAU,KACJvB,EAAW4B,SACbd,EAAgBd,EAAWgC,MAAM,EAAGhB,IACpCG,EAAoBnB,EAAW4B,OAASZ,GAC1C,GACC,CAAChB,EAAYgB,KAGdiB,EAAAA,EAAAA,MAACC,EAAAA,EAAoB,CAAAvB,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAAE,SACGE,EAAasB,KACZ5B,IAAA,IAAC,IACC6B,EAAG,QACHC,EAAO,KACPC,EAAI,MACJC,EAAK,OACLC,EAAM,QACNC,EAAO,SACPC,EAAQ,YACRC,EAAW,QACXC,EAAO,OACPC,EAAM,aACNC,EAAY,OACZC,GACDxC,EAAA,OACCE,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAETC,GAAIb,EACJC,QAASA,EACTC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,QAASA,EACTC,SAAUA,EACVC,YAAaA,EACbC,QAASA,EACTC,OAAQA,EACRC,aAAcA,EACdC,OAAQA,GAZHX,EAaL,MAIPlB,IAAoBT,EAAAA,EAAAA,KAACH,EAAW,CAACE,QArEf0C,KACrB,MAAMC,EAAWnC,EAAY,EACzBmC,GAAYnD,EAAW4B,QACzBT,GAAoB,GACpBiC,EAAAA,OAAOC,KAAK,mCAEZvC,EAAgBd,EAAWgC,MAAM,EAAGmB,IACpClC,EAAakC,GACbhC,EAAoBgC,EAAWnD,EAAW4B,QAC5C,MA6DuB,ECxF3B,EAJoB0B,KACX7C,EAAAA,EAAAA,KAACG,EAAW,G","sources":["redux/selectors.js","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/LoadMoreBtn/LoadMoreBtn.jsx","components/AdvertsList/AdvertsList.jsx","pages/Adverts.jsx"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\n// export const selectAdverts = state => state.contacts;\nexport const selectAdvertsArr = state => state.adverts.advertsArr;\nexport const selectIsLoading = state => state.adverts.isLoading;\nexport const selectError = state => state.adverts.error;\n","import styled from 'styled-components';\n\nexport const LoadMoreButton = styled.button`\n  border: 1px solid rgba(71, 84, 103, 0.2);\n  border-radius: 200px;\n  padding: 16px 32px;\n  width: 146px;\n  height: 56px;\n\n  background-color: transparent;\n  cursor: pointer;\n\n  font-family: 'Inter', sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  letter-spacing: -0.01em;\n\n  &:hover {\n    border-color: #e44848;\n  }\n`;\n","import { LoadMoreButton } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ onClick }) => {\n  return (\n    <LoadMoreButton type=\"button\" onClick={onClick}>\n      Load more\n    </LoadMoreButton>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport {\n  selectAdvertsArr,\n  // selectIsLoading,\n  // selectError\n} from '../../redux/selectors';\nimport { fetchAdverts } from '../../redux/operations';\nimport { AdvertItem } from 'components/AdvertItem/AdvertItem';\nimport { LoadMoreBtn } from 'components/LoadMoreBtn/LoadMoreBtn';\nimport { ListAdvertsContainer } from './AdvertsList.styled';\nimport { Notify } from 'notiflix';\n\nexport const AdvertsList = () => {\n  const [dataToRender, setDataToRender] = useState([]);\n  const [countData, setCountData] = useState(4);\n  const [loadMoreBtnShown, setLoadMoreBtnShown] = useState(false);\n  // const [favorites, setFavorites] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const advertsArr = useSelector(selectAdvertsArr);\n\n  const handleLoadMore = () => {\n    const newCount = countData + 4;\n    if (newCount >= advertsArr.length) {\n      setLoadMoreBtnShown(false);\n      Notify.info(\"Oops, there's no more adverts\");\n    } else {\n      setDataToRender(advertsArr.slice(0, newCount));\n      setCountData(newCount);\n      setLoadMoreBtnShown(newCount < advertsArr.length);\n    }\n  };\n\n  useEffect(() => {\n    const favoritesLS = JSON.parse(localStorage.getItem('favorites'));\n\n    if (favoritesLS.length > 0) {\n      return;\n    }\n\n    localStorage.setItem('favorites', JSON.stringify([]));\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (advertsArr.length) {\n      setDataToRender(advertsArr.slice(0, countData));\n      setLoadMoreBtnShown(advertsArr.length > countData);\n    }\n  }, [advertsArr, countData]);\n\n  return (\n    <ListAdvertsContainer>\n      <ul>\n        {dataToRender.map(\n          ({\n            _id,\n            gallery,\n            name,\n            price,\n            rating,\n            reviews,\n            location,\n            description,\n            details,\n            adults,\n            transmission,\n            engine,\n          }) => (\n            <AdvertItem\n              key={_id}\n              id={_id}\n              gallery={gallery}\n              name={name}\n              price={price}\n              rating={rating}\n              reviews={reviews}\n              location={location}\n              description={description}\n              details={details}\n              adults={adults}\n              transmission={transmission}\n              engine={engine}\n            />\n          )\n        )}\n      </ul>\n      {loadMoreBtnShown && <LoadMoreBtn onClick={handleLoadMore} />}\n    </ListAdvertsContainer>\n  );\n};\n","import { AdvertsList } from 'components/AdvertsList/AdvertsList';\nconst AdvertsPage = () => {\n  return <AdvertsList />;\n};\n\nexport default AdvertsPage;\n"],"names":["selectAdvertsArr","state","adverts","advertsArr","LoadMoreButton","styled","button","_templateObject","_taggedTemplateLiteral","LoadMoreBtn","_ref","onClick","_jsx","type","children","AdvertsList","dataToRender","setDataToRender","useState","countData","setCountData","loadMoreBtnShown","setLoadMoreBtnShown","dispatch","useDispatch","useSelector","useEffect","JSON","parse","localStorage","getItem","length","setItem","stringify","fetchAdverts","slice","_jsxs","ListAdvertsContainer","map","_id","gallery","name","price","rating","reviews","location","description","details","adults","transmission","engine","AdvertItem","id","handleLoadMore","newCount","Notify","info","AdvertsPage"],"sourceRoot":""}